package APIKit.constraints;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.base.BaseConstraintsDescriptor;
import jetbrains.mps.smodel.runtime.ConstraintFunction;
import jetbrains.mps.smodel.runtime.ConstraintContext_CanBeChild;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.smodel.runtime.CheckingNodeContext;
import org.jetbrains.mps.openapi.model.SNode;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import org.jetbrains.mps.openapi.language.SContainmentLink;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.internal.collections.runtime.IWhereFilter;
import java.util.Objects;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.smodel.SNodePointer;
import org.jetbrains.mps.openapi.language.SConcept;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import org.jetbrains.mps.openapi.language.SProperty;

public class Pair_Constraints extends BaseConstraintsDescriptor {
  public Pair_Constraints() {
    super(CONCEPTS.Pair$n9);
  }

  @Override
  protected ConstraintFunction<ConstraintContext_CanBeChild, Boolean> calculateCanBeChildConstraint() {
    return new ConstraintFunction<ConstraintContext_CanBeChild, Boolean>() {
      @NotNull
      public Boolean invoke(@NotNull ConstraintContext_CanBeChild context, @Nullable CheckingNodeContext checkingNodeContext) {
        boolean result = staticCanBeAChild(context.getNode(), context.getParentNode(), context.getConcept(), context.getLink());

        if (!(result) && checkingNodeContext != null) {
          checkingNodeContext.setBreakingNode(canBeChildBreakingPoint);
        }

        return result;
      }
    };
  }
  private static boolean staticCanBeAChild(final SNode node, SNode parentNode, SAbstractConcept childConcept, SContainmentLink link) {
    if (SNodeOperations.hasRole(node, LINKS.body$rDKj)) {
      return ListSequence.fromList(SLinkOperations.getChildren(SNodeOperations.cast(parentNode, CONCEPTS.Configuration$Wy), LINKS.body$rDKj)).where(new IWhereFilter<SNode>() {
        public boolean accept(SNode it) {
          return Objects.equals(SPropertyOperations.getString(it, PROPS.key$s8WT), SPropertyOperations.getString(node, PROPS.key$s8WT));
        }
      }).count() <= 1;
    }
    if (SNodeOperations.hasRole(node, LINKS.params$rEel)) {
      return ListSequence.fromList(SLinkOperations.getChildren(SNodeOperations.cast(parentNode, CONCEPTS.Configuration$Wy), LINKS.params$rEel)).where(new IWhereFilter<SNode>() {
        public boolean accept(SNode it) {
          return Objects.equals(SPropertyOperations.getString(it, PROPS.key$s8WT), SPropertyOperations.getString(node, PROPS.key$s8WT));
        }
      }).count() <= 1;
    }
    if (SNodeOperations.hasRole(node, LINKS.header$I5By)) {
      return ListSequence.fromList(SLinkOperations.getChildren(SNodeOperations.cast(parentNode, CONCEPTS.Configuration$Wy), LINKS.header$I5By)).where(new IWhereFilter<SNode>() {
        public boolean accept(SNode it) {
          return Objects.equals(SPropertyOperations.getString(it, PROPS.key$s8WT), SPropertyOperations.getString(node, PROPS.key$s8WT));
        }
      }).count() <= 1;
    }
    return true;
  }
  private static final SNodePointer canBeChildBreakingPoint = new SNodePointer("r:c858f503-3715-4f71-86f6-d0ddf4125fa9(APIKit.constraints)", "2339867461812064014");

  private static final class CONCEPTS {
    /*package*/ static final SConcept Pair$n9 = MetaAdapterFactory.getConcept(0x8c215991f45d42d8L, 0x93ca8d6842f30382L, 0x29ddbebf533965d8L, "APIKit.structure.Pair");
    /*package*/ static final SConcept Configuration$Wy = MetaAdapterFactory.getConcept(0x8c215991f45d42d8L, 0x93ca8d6842f30382L, 0x29ddbebf533964c1L, "APIKit.structure.Configuration");
  }

  private static final class LINKS {
    /*package*/ static final SContainmentLink body$rDKj = MetaAdapterFactory.getContainmentLink(0x8c215991f45d42d8L, 0x93ca8d6842f30382L, 0x29ddbebf533964c1L, 0x29ddbebf533965c4L, "body");
    /*package*/ static final SContainmentLink params$rEel = MetaAdapterFactory.getContainmentLink(0x8c215991f45d42d8L, 0x93ca8d6842f30382L, 0x29ddbebf533964c1L, 0x29ddbebf533965c6L, "params");
    /*package*/ static final SContainmentLink header$I5By = MetaAdapterFactory.getContainmentLink(0x8c215991f45d42d8L, 0x93ca8d6842f30382L, 0x29ddbebf533964c1L, 0x4b268987f386d049L, "header");
  }

  private static final class PROPS {
    /*package*/ static final SProperty key$s8WT = MetaAdapterFactory.getProperty(0x8c215991f45d42d8L, 0x93ca8d6842f30382L, 0x29ddbebf533965d8L, 0x29ddbebf533965d9L, "key");
  }
}
